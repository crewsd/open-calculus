%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, December 8, 2012 5:35:31 PM EST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
1.00000 0 0 RG
1.00000 6.01576 390.000 376.484 rc
newpath
292.431 381.500 m
292.431 8.01577 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0 0 1.00000 RG
1.00000 6.01576 390.000 376.484 rc
newpath
21.0228 276.084 m
21.4382 276.924 l
30.3006 291.863 l
40.6400 306.803 l
44.2864 311.413 l
53.8181 321.742 l
67.5500 334.970 l
69.6825 336.681 l
90.3613 351.621 l
90.8137 351.918 l
114.077 364.141 l
120.216 366.560 l
137.340 372.746 l
160.604 378.348 l
183.868 381.149 l
207.131 381.149 l
230.395 378.348 l
253.659 372.746 l
270.783 366.560 l
276.922 364.141 l
300.186 351.918 l
300.638 351.621 l
321.317 336.681 l
323.449 334.970 l
337.181 321.742 l
346.713 311.413 l
350.360 306.803 l
360.699 291.863 l
369.561 276.924 l
369.977 276.084 l
376.075 261.985 l
381.245 247.045 l
385.122 232.106 l
387.707 217.166 l
389.000 202.227 l
389.000 187.288 l
388.750 184.404 l
387.707 172.348 l
387.015 168.351 l
385.122 157.409 l
383.499 151.153 l
381.245 142.470 l
377.818 132.566 l
376.075 127.530 l
369.977 113.431 l
369.561 112.591 l
369.306 112.160 l
360.699 97.6520 l
353.277 86.9276 l
350.360 82.7126 l
346.713 78.1024 l
337.181 67.7732 l
323.449 54.5456 l
321.317 52.8338 l
304.257 40.5089 l
300.638 37.8945 l
300.186 37.5974 l
297.641 36.2605 l
276.922 25.3743 l
270.783 22.9551 l
253.659 16.7693 l
238.246 13.0578 l
230.395 11.1670 l
207.802 8.44671 l
207.131 8.36593 l
183.868 8.36593 l
164.736 10.6694 l
160.604 11.1670 l
147.254 14.3819 l
137.340 16.7693 l
131.176 18.9962 l
120.216 22.9551 l
116.411 24.4543 l
114.077 25.3743 l
103.354 31.0083 l
90.8137 37.5974 l
90.5850 37.7476 l
90.3613 37.8945 l
79.6266 45.6498 l
69.6825 52.8338 l
68.7348 53.5947 l
67.5500 54.5456 l
59.3108 62.4822 l
53.8181 67.7732 l
50.2714 71.6166 l
44.2864 78.1024 l
41.8682 81.1597 l
40.6400 82.7126 l
34.6039 91.4341 l
30.3006 97.6520 l
27.7412 101.966 l
21.4382 112.591 l
21.3381 112.793 l
21.0228 113.431 l
16.2500 124.465 l
14.9242 127.530 l
11.8033 136.549 l
9.75453 142.470 l
8.04092 149.072 l
5.87727 157.409 l
5.06546 162.101 l
3.29242 172.348 l
3.00120 175.715 l
2.00000 187.288 l
2.00000 202.227 l
3.29242 217.166 l
5.87727 232.106 l
9.75453 247.045 l
14.9242 261.985 l
21.0228 276.084 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
2.00000 195.000 m
389.000 195.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
285 216 14 15 rc
newpath
291.278 222.255 m
291.486 222.475 291.642 222.695 291.748 222.915  c
291.824 223.067 291.949 223.467 292.123 224.115  c
292.681 223.277 l
292.829 223.074 293.009 222.880 293.221 222.696  c
293.432 222.512 293.619 222.386 293.779 222.318  c
293.881 222.276 293.993 222.255 294.116 222.255  c
294.298 222.255 294.443 222.304 294.551 222.401  c
294.658 222.498 294.712 222.617 294.712 222.756  c
294.712 222.917 294.681 223.027 294.617 223.086  c
294.499 223.192 294.363 223.245 294.211 223.245  c
294.122 223.245 294.027 223.226 293.925 223.188  c
293.726 223.120 293.593 223.086 293.525 223.086  c
293.424 223.086 293.303 223.146 293.164 223.264  c
292.901 223.484 292.588 223.910 292.224 224.540  c
292.745 226.724 l
292.825 227.058 292.893 227.258 292.948 227.324  c
293.003 227.389 293.058 227.422 293.113 227.422  c
293.202 227.422 293.305 227.373 293.424 227.276  c
293.657 227.081 293.856 226.827 294.021 226.514  c
294.243 226.628 l
293.976 227.128 293.638 227.543 293.227 227.873  c
292.994 228.059 292.798 228.152 292.637 228.152  c
292.400 228.152 292.211 228.019 292.072 227.752  c
291.983 227.587 291.799 226.876 291.520 225.619  c
290.859 226.766 290.330 227.504 289.933 227.835  c
289.675 228.046 289.425 228.152 289.184 228.152  c
289.014 228.152 288.860 228.091 288.720 227.968  c
288.619 227.875 288.568 227.750 288.568 227.593  c
288.568 227.454 288.614 227.337 288.708 227.244  c
288.801 227.151 288.915 227.105 289.050 227.105  c
289.186 227.105 289.330 227.172 289.482 227.308  c
289.592 227.405 289.677 227.454 289.736 227.454  c
289.787 227.454 289.852 227.420 289.933 227.352  c
290.132 227.191 290.402 226.844 290.745 226.311  c
291.088 225.778 291.312 225.393 291.418 225.156  c
291.156 224.127 291.014 223.584 290.993 223.524  c
290.895 223.249 290.768 223.055 290.612 222.940  c
290.455 222.826 290.225 222.769 289.920 222.769  c
289.823 222.769 289.710 222.773 289.584 222.782  c
289.584 222.553 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
50.0000 195.000 m
50.0000 199.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
42 206 7 13 rc
newpath
52.7900 213.438 m
44.2100 213.438 l
44.2100 212.762 l
52.7900 212.762 l
h
f
Q
newpath
52.5234 209.236 m
54.6181 208.214 l
54.8276 208.214 l
54.8276 215.482 l
54.8276 215.965 54.8477 216.265 54.8879 216.384  c
54.9281 216.502 55.0117 216.593 55.1386 216.657  c
55.2656 216.720 55.5237 216.756 55.9130 216.765  c
55.9130 217.000 l
52.6757 217.000 l
52.6757 216.765 l
53.0820 216.756 53.3444 216.721 53.4628 216.660  c
53.5813 216.599 53.6639 216.516 53.7104 216.412  c
53.7570 216.309 53.7802 215.999 53.7802 215.482  c
53.7802 210.836 l
53.7802 210.210 53.7591 209.808 53.7168 209.630  c
53.6871 209.495 53.6332 209.395 53.5549 209.332  c
53.4766 209.268 53.3824 209.236 53.2724 209.236  c
53.1158 209.236 52.8979 209.302 52.6186 209.433  c
h
59.6250 215.768 m
59.8238 215.768 59.9910 215.837 60.1264 215.974  c
60.2618 216.112 60.3295 216.278 60.3295 216.473  c
60.3295 216.667 60.2608 216.833 60.1232 216.971  c
59.9857 217.109 59.8196 217.177 59.6250 217.177  c
59.4303 217.177 59.2642 217.109 59.1267 216.971  c
58.9891 216.833 58.9204 216.667 58.9204 216.473  c
58.9204 216.274 58.9891 216.107 59.1267 215.971  c
59.2642 215.836 59.4303 215.768 59.6250 215.768  c
h
66.6430 208.392 m
66.1479 209.471 l
63.5581 209.471 l
62.9931 210.627 l
64.1145 210.792 65.0032 211.208 65.6591 211.877  c
66.2220 212.453 66.5034 213.130 66.5034 213.908  c
66.5034 214.361 66.4113 214.780 66.2272 215.165  c
66.0432 215.550 65.8115 215.878 65.5322 216.149  c
65.2529 216.420 64.9418 216.638 64.5991 216.803  c
64.1124 217.036 63.6131 217.152 63.1010 217.152  c
62.5848 217.152 62.2092 217.064 61.9743 216.888  c
61.7395 216.713 61.6220 216.519 61.6220 216.308  c
61.6220 216.189 61.6707 216.084 61.7680 215.993  c
61.8654 215.902 61.9881 215.857 62.1362 215.857  c
62.2462 215.857 62.3425 215.874 62.4250 215.908  c
62.5075 215.942 62.6482 216.028 62.8471 216.168  c
63.1645 216.388 63.4861 216.498 63.8120 216.498  c
64.3071 216.498 64.7419 216.311 65.1164 215.936  c
65.4909 215.562 65.6782 215.106 65.6782 214.568  c
65.6782 214.048 65.5110 213.562 65.1767 213.112  c
64.8424 212.661 64.3811 212.313 63.7929 212.067  c
63.3317 211.877 62.7032 211.767 61.9077 211.737  c
63.5581 208.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
99.0000 195.000 m
99.0000 199.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
95 206 7 13 rc
newpath
105.790 213.438 m
97.2100 213.438 l
97.2100 212.762 l
105.790 212.762 l
h
f
Q
newpath
105.523 209.236 m
107.618 208.214 l
107.827 208.214 l
107.827 215.482 l
107.827 215.965 107.847 216.265 107.887 216.384  c
107.928 216.502 108.011 216.593 108.138 216.657  c
108.265 216.720 108.523 216.756 108.913 216.765  c
108.913 217.000 l
105.675 217.000 l
105.675 216.765 l
106.082 216.756 106.344 216.721 106.462 216.660  c
106.581 216.599 106.663 216.516 106.710 216.412  c
106.757 216.309 106.780 215.999 106.780 215.482  c
106.780 210.836 l
106.780 210.210 106.759 209.808 106.716 209.630  c
106.687 209.495 106.633 209.395 106.554 209.332  c
106.476 209.268 106.382 209.236 106.272 209.236  c
106.115 209.236 105.897 209.302 105.618 209.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
147.000 195.000 m
147.000 199.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
139 206 7 13 rc
newpath
149.790 213.438 m
141.210 213.438 l
141.210 212.762 l
149.790 212.762 l
h
f
Q
newpath
148.469 212.747 m
148.469 211.765 148.617 210.920 148.914 210.211  c
149.210 209.502 149.603 208.974 150.094 208.627  c
150.475 208.352 150.869 208.214 151.275 208.214  c
151.935 208.214 152.528 208.551 153.052 209.224  c
153.708 210.057 154.036 211.187 154.036 212.613  c
154.036 213.612 153.892 214.460 153.605 215.159  c
153.317 215.857 152.950 216.364 152.503 216.679  c
152.057 216.994 151.626 217.152 151.211 217.152  c
150.391 217.152 149.707 216.667 149.161 215.698  c
148.700 214.882 148.469 213.898 148.469 212.747  c
h
149.713 212.905 m
149.713 214.090 149.859 215.057 150.151 215.806  c
150.393 216.437 150.752 216.752 151.231 216.752  c
151.459 216.752 151.696 216.649 151.941 216.444  c
152.187 216.239 152.373 215.895 152.500 215.413  c
152.695 214.685 152.792 213.659 152.792 212.334  c
152.792 211.352 152.690 210.533 152.487 209.877  c
152.335 209.391 152.138 209.046 151.897 208.843  c
151.724 208.703 151.514 208.633 151.269 208.633  c
150.981 208.633 150.725 208.762 150.501 209.021  c
150.196 209.372 149.988 209.924 149.878 210.677  c
149.768 211.431 149.713 212.173 149.713 212.905  c
h
156.625 215.768 m
156.823 215.768 156.991 215.837 157.126 215.974  c
157.261 216.112 157.329 216.278 157.329 216.473  c
157.329 216.667 157.260 216.833 157.123 216.971  c
156.985 217.109 156.819 217.177 156.625 217.177  c
156.430 217.177 156.264 217.109 156.126 216.971  c
155.989 216.833 155.920 216.667 155.920 216.473  c
155.920 216.274 155.989 216.107 156.126 215.971  c
156.264 215.836 156.430 215.768 156.625 215.768  c
h
163.643 208.392 m
163.147 209.471 l
160.558 209.471 l
159.993 210.627 l
161.114 210.792 162.003 211.208 162.659 211.877  c
163.222 212.453 163.503 213.130 163.503 213.908  c
163.503 214.361 163.411 214.780 163.227 215.165  c
163.043 215.550 162.811 215.878 162.532 216.149  c
162.252 216.420 161.941 216.638 161.599 216.803  c
161.112 217.036 160.613 217.152 160.101 217.152  c
159.584 217.152 159.209 217.064 158.974 216.888  c
158.739 216.713 158.622 216.519 158.622 216.308  c
158.622 216.189 158.670 216.084 158.768 215.993  c
158.865 215.902 158.988 215.857 159.136 215.857  c
159.246 215.857 159.342 215.874 159.425 215.908  c
159.507 215.942 159.648 216.028 159.847 216.168  c
160.164 216.388 160.486 216.498 160.812 216.498  c
161.307 216.498 161.741 216.311 162.116 215.936  c
162.491 215.562 162.678 215.106 162.678 214.568  c
162.678 214.048 162.511 213.562 162.176 213.112  c
161.842 212.661 161.381 212.313 160.793 212.067  c
160.331 211.877 159.703 211.767 158.907 211.737  c
160.558 208.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.000 195.000 m
196.000 199.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
191.469 210.747 m
191.469 209.765 191.617 208.920 191.914 208.211  c
192.210 207.502 192.603 206.974 193.094 206.627  c
193.475 206.352 193.869 206.214 194.275 206.214  c
194.935 206.214 195.528 206.551 196.052 207.224  c
196.708 208.057 197.036 209.187 197.036 210.613  c
197.036 211.612 196.892 212.460 196.605 213.159  c
196.317 213.857 195.950 214.364 195.503 214.679  c
195.057 214.994 194.626 215.152 194.211 215.152  c
193.391 215.152 192.707 214.667 192.161 213.698  c
191.700 212.882 191.469 211.898 191.469 210.747  c
h
192.713 210.905 m
192.713 212.090 192.859 213.057 193.151 213.806  c
193.393 214.437 193.752 214.752 194.231 214.752  c
194.459 214.752 194.696 214.649 194.941 214.444  c
195.187 214.239 195.373 213.895 195.500 213.413  c
195.695 212.685 195.792 211.659 195.792 210.334  c
195.792 209.352 195.690 208.533 195.487 207.877  c
195.335 207.391 195.138 207.046 194.897 206.843  c
194.724 206.703 194.514 206.633 194.269 206.633  c
193.981 206.633 193.725 206.762 193.501 207.021  c
193.196 207.372 192.988 207.924 192.878 208.677  c
192.768 209.431 192.713 210.173 192.713 210.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
244.000 195.000 m
244.000 199.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
240.469 212.747 m
240.469 211.765 240.617 210.920 240.914 210.211  c
241.210 209.502 241.603 208.974 242.094 208.627  c
242.475 208.352 242.869 208.214 243.275 208.214  c
243.935 208.214 244.528 208.551 245.052 209.224  c
245.708 210.057 246.036 211.187 246.036 212.613  c
246.036 213.612 245.892 214.460 245.605 215.159  c
245.317 215.857 244.950 216.364 244.503 216.679  c
244.057 216.994 243.626 217.152 243.211 217.152  c
242.391 217.152 241.707 216.667 241.161 215.698  c
240.700 214.882 240.469 213.898 240.469 212.747  c
h
241.713 212.905 m
241.713 214.090 241.859 215.057 242.151 215.806  c
242.393 216.437 242.752 216.752 243.231 216.752  c
243.459 216.752 243.696 216.649 243.941 216.444  c
244.187 216.239 244.373 215.895 244.500 215.413  c
244.695 214.685 244.792 213.659 244.792 212.334  c
244.792 211.352 244.690 210.533 244.487 209.877  c
244.335 209.391 244.138 209.046 243.897 208.843  c
243.724 208.703 243.514 208.633 243.269 208.633  c
242.981 208.633 242.725 208.762 242.501 209.021  c
242.196 209.372 241.988 209.924 241.878 210.677  c
241.768 211.431 241.713 212.173 241.713 212.905  c
h
248.625 215.768 m
248.823 215.768 248.991 215.837 249.126 215.974  c
249.261 216.112 249.329 216.278 249.329 216.473  c
249.329 216.667 249.260 216.833 249.123 216.971  c
248.985 217.109 248.819 217.177 248.625 217.177  c
248.430 217.177 248.264 217.109 248.126 216.971  c
247.989 216.833 247.920 216.667 247.920 216.473  c
247.920 216.274 247.989 216.107 248.126 215.971  c
248.264 215.836 248.430 215.768 248.625 215.768  c
h
255.643 208.392 m
255.147 209.471 l
252.558 209.471 l
251.993 210.627 l
253.114 210.792 254.003 211.208 254.659 211.877  c
255.222 212.453 255.503 213.130 255.503 213.908  c
255.503 214.361 255.411 214.780 255.227 215.165  c
255.043 215.550 254.811 215.878 254.532 216.149  c
254.252 216.420 253.941 216.638 253.599 216.803  c
253.112 217.036 252.613 217.152 252.101 217.152  c
251.584 217.152 251.209 217.064 250.974 216.888  c
250.739 216.713 250.622 216.519 250.622 216.308  c
250.622 216.189 250.670 216.084 250.768 215.993  c
250.865 215.902 250.988 215.857 251.136 215.857  c
251.246 215.857 251.342 215.874 251.425 215.908  c
251.507 215.942 251.648 216.028 251.847 216.168  c
252.164 216.388 252.486 216.498 252.812 216.498  c
253.307 216.498 253.741 216.311 254.116 215.936  c
254.491 215.562 254.678 215.106 254.678 214.568  c
254.678 214.048 254.511 213.562 254.176 213.112  c
253.842 212.661 253.381 212.313 252.793 212.067  c
252.331 211.877 251.703 211.767 250.907 211.737  c
252.558 208.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
292.000 195.000 m
292.000 199.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
295.523 209.236 m
297.618 208.214 l
297.827 208.214 l
297.827 215.482 l
297.827 215.965 297.847 216.265 297.887 216.384  c
297.928 216.502 298.011 216.593 298.138 216.657  c
298.265 216.720 298.523 216.756 298.913 216.765  c
298.913 217.000 l
295.675 217.000 l
295.675 216.765 l
296.082 216.756 296.344 216.721 296.462 216.660  c
296.581 216.599 296.663 216.516 296.710 216.412  c
296.757 216.309 296.780 215.999 296.780 215.482  c
296.780 210.836 l
296.780 210.210 296.759 209.808 296.716 209.630  c
296.687 209.495 296.633 209.395 296.554 209.332  c
296.476 209.268 296.382 209.236 296.272 209.236  c
296.115 209.236 295.897 209.302 295.618 209.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
341.000 195.000 m
341.000 199.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
338.523 209.236 m
340.618 208.214 l
340.827 208.214 l
340.827 215.482 l
340.827 215.965 340.847 216.265 340.887 216.384  c
340.928 216.502 341.011 216.593 341.138 216.657  c
341.265 216.720 341.523 216.756 341.913 216.765  c
341.913 217.000 l
338.675 217.000 l
338.675 216.765 l
339.082 216.756 339.344 216.721 339.462 216.660  c
339.581 216.599 339.663 216.516 339.710 216.412  c
339.757 216.309 339.780 215.999 339.780 215.482  c
339.780 210.836 l
339.780 210.210 339.759 209.808 339.716 209.630  c
339.687 209.495 339.633 209.395 339.554 209.332  c
339.476 209.268 339.382 209.236 339.272 209.236  c
339.115 209.236 338.897 209.302 338.618 209.433  c
h
345.625 215.768 m
345.823 215.768 345.991 215.837 346.126 215.974  c
346.261 216.112 346.329 216.278 346.329 216.473  c
346.329 216.667 346.260 216.833 346.123 216.971  c
345.985 217.109 345.819 217.177 345.625 217.177  c
345.430 217.177 345.264 217.109 345.126 216.971  c
344.989 216.833 344.920 216.667 344.920 216.473  c
344.920 216.274 344.989 216.107 345.126 215.971  c
345.264 215.836 345.430 215.768 345.625 215.768  c
h
352.643 208.392 m
352.147 209.471 l
349.558 209.471 l
348.993 210.627 l
350.114 210.792 351.003 211.208 351.659 211.877  c
352.222 212.453 352.503 213.130 352.503 213.908  c
352.503 214.361 352.411 214.780 352.227 215.165  c
352.043 215.550 351.811 215.878 351.532 216.149  c
351.252 216.420 350.941 216.638 350.599 216.803  c
350.112 217.036 349.613 217.152 349.101 217.152  c
348.584 217.152 348.209 217.064 347.974 216.888  c
347.739 216.713 347.622 216.519 347.622 216.308  c
347.622 216.189 347.670 216.084 347.768 215.993  c
347.865 215.902 347.988 215.857 348.136 215.857  c
348.246 215.857 348.342 215.874 348.425 215.908  c
348.507 215.942 348.648 216.028 348.847 216.168  c
349.164 216.388 349.486 216.498 349.812 216.498  c
350.307 216.498 350.741 216.311 351.116 215.936  c
351.491 215.562 351.678 215.106 351.678 214.568  c
351.678 214.048 351.511 213.562 351.176 213.112  c
350.842 212.661 350.381 212.313 349.793 212.067  c
349.331 211.877 348.703 211.767 347.907 211.737  c
349.558 208.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
11.0000 195.000 m
11.0000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
21.0000 195.000 m
21.0000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.0000 195.000 m
31.0000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
40.0000 195.000 m
40.0000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
60.0000 195.000 m
60.0000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
69.0000 195.000 m
69.0000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
79.0000 195.000 m
79.0000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
89.0000 195.000 m
89.0000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
108.000 195.000 m
108.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
118.000 195.000 m
118.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
128.000 195.000 m
128.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
137.000 195.000 m
137.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
157.000 195.000 m
157.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
166.000 195.000 m
166.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
176.000 195.000 m
176.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
186.000 195.000 m
186.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
205.000 195.000 m
205.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
215.000 195.000 m
215.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
225.000 195.000 m
225.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
234.000 195.000 m
234.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
254.000 195.000 m
254.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
263.000 195.000 m
263.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
273.000 195.000 m
273.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
283.000 195.000 m
283.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
302.000 195.000 m
302.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
312.000 195.000 m
312.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
322.000 195.000 m
322.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
331.000 195.000 m
331.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
351.000 195.000 m
351.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
360.000 195.000 m
360.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
370.000 195.000 m
370.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
380.000 195.000 m
380.000 197.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
196.000 381.500 m
196.000 8.01577 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
154 94 14 15 rc
newpath
160.101 100.255 m
160.245 100.500 160.344 100.730 160.399 100.944  c
160.454 101.157 160.509 101.577 160.564 102.204  c
160.843 105.327 l
161.097 105.022 161.465 104.540 161.948 103.879  c
162.181 103.558 162.468 103.120 162.811 102.565  c
163.018 102.227 163.145 101.990 163.192 101.855  c
163.217 101.787 163.230 101.717 163.230 101.645  c
163.230 101.599 163.215 101.560 163.186 101.531  c
163.156 101.501 163.079 101.466 162.954 101.426  c
162.829 101.386 162.725 101.312 162.643 101.204  c
162.560 101.096 162.519 100.972 162.519 100.833  c
162.519 100.659 162.570 100.519 162.671 100.414  c
162.773 100.308 162.900 100.255 163.052 100.255  c
163.238 100.255 163.397 100.332 163.528 100.487  c
163.660 100.641 163.725 100.854 163.725 101.125  c
163.725 101.459 163.611 101.841 163.382 102.270  c
163.154 102.700 162.714 103.359 162.062 104.248  c
161.410 105.136 160.621 106.105 159.694 107.155  c
159.055 107.878 158.581 108.334 158.272 108.523  c
157.964 108.711 157.699 108.805 157.479 108.805  c
157.348 108.805 157.233 108.755 157.133 108.656  c
157.034 108.557 156.984 108.441 156.984 108.310  c
156.984 108.145 157.053 107.995 157.190 107.859  c
157.328 107.724 157.477 107.656 157.638 107.656  c
157.722 107.656 157.792 107.675 157.847 107.713  c
157.881 107.735 157.918 107.795 157.958 107.894  c
157.998 107.994 158.036 108.060 158.069 108.094  c
158.091 108.115 158.116 108.126 158.146 108.126  c
158.171 108.126 158.215 108.105 158.279 108.063  c
158.512 107.919 158.782 107.690 159.091 107.377  c
159.498 106.962 159.798 106.624 159.993 106.361  c
159.637 102.337 l
159.578 101.673 159.489 101.268 159.371 101.125  c
159.252 100.981 159.053 100.909 158.774 100.909  c
158.685 100.909 158.526 100.921 158.298 100.947  c
158.241 100.712 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
196.000 382.000 m
192.000 382.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
177 380 7 13 rc
newpath
187.790 387.438 m
179.210 387.438 l
179.210 386.762 l
187.790 386.762 l
h
f
Q
newpath
191.960 389.343 m
191.357 391.000 l
186.279 391.000 l
186.279 390.765 l
187.773 389.402 188.824 388.289 189.434 387.426  c
190.043 386.563 190.348 385.773 190.348 385.058  c
190.348 384.512 190.181 384.064 189.846 383.712  c
189.512 383.361 189.112 383.186 188.647 383.186  c
188.223 383.186 187.844 383.309 187.507 383.557  c
187.171 383.804 186.922 384.167 186.761 384.646  c
186.526 384.646 l
186.632 383.863 186.904 383.262 187.342 382.843  c
187.780 382.424 188.327 382.214 188.983 382.214  c
189.681 382.214 190.264 382.439 190.732 382.887  c
191.199 383.336 191.433 383.865 191.433 384.474  c
191.433 384.910 191.332 385.346 191.128 385.782  c
190.815 386.467 190.307 387.193 189.605 387.959  c
188.551 389.110 187.893 389.804 187.631 390.041  c
189.878 390.041 l
190.335 390.041 190.656 390.024 190.840 389.990  c
191.024 389.956 191.190 389.888 191.338 389.784  c
191.486 389.680 191.615 389.533 191.725 389.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.000 288.000 m
192.000 288.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
177 287 7 13 rc
newpath
187.790 294.438 m
179.210 294.438 l
179.210 293.762 l
187.790 293.762 l
h
f
Q
newpath
187.523 290.236 m
189.618 289.214 l
189.827 289.214 l
189.827 296.482 l
189.827 296.965 189.847 297.265 189.887 297.384  c
189.928 297.502 190.011 297.593 190.138 297.657  c
190.265 297.720 190.523 297.756 190.913 297.765  c
190.913 298.000 l
187.675 298.000 l
187.675 297.765 l
188.082 297.756 188.344 297.721 188.462 297.660  c
188.581 297.599 188.663 297.516 188.710 297.412  c
188.757 297.309 188.780 296.999 188.780 296.482  c
188.780 291.836 l
188.780 291.210 188.759 290.808 188.716 290.630  c
188.687 290.495 188.633 290.395 188.554 290.332  c
188.476 290.268 188.382 290.236 188.272 290.236  c
188.115 290.236 187.897 290.302 187.618 290.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.000 195.000 m
192.000 195.000 l
S
Q
q
0 w
newpath
196.000 101.000 m
192.000 101.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
187.523 103.236 m
189.618 102.214 l
189.827 102.214 l
189.827 109.482 l
189.827 109.965 189.847 110.265 189.887 110.384  c
189.928 110.502 190.011 110.593 190.138 110.657  c
190.265 110.720 190.523 110.756 190.913 110.765  c
190.913 111.000 l
187.675 111.000 l
187.675 110.765 l
188.082 110.756 188.344 110.721 188.462 110.660  c
188.581 110.599 188.663 110.516 188.710 110.412  c
188.757 110.309 188.780 109.999 188.780 109.482  c
188.780 104.836 l
188.780 104.210 188.759 103.808 188.716 103.630  c
188.687 103.495 188.633 103.395 188.554 103.332  c
188.476 103.268 188.382 103.236 188.272 103.236  c
188.115 103.236 187.897 103.302 187.618 103.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.000 8.00000 m
192.000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
191.960 16.3432 m
191.357 18.0000 l
186.279 18.0000 l
186.279 17.7651 l
187.773 16.4025 188.824 15.2895 189.434 14.4262  c
190.043 13.5629 190.348 12.7737 190.348 12.0585  c
190.348 11.5127 190.181 11.0641 189.846 10.7128  c
189.512 10.3616 189.112 10.1860 188.647 10.1860  c
188.223 10.1860 187.844 10.3098 187.507 10.5573  c
187.171 10.8049 186.922 11.1678 186.761 11.6460  c
186.526 11.6460 l
186.632 10.8631 186.904 10.2622 187.342 9.84326  c
187.780 9.42431 188.327 9.21484 188.983 9.21484  c
189.681 9.21484 190.264 9.43912 190.732 9.88769  c
191.199 10.3362 191.433 10.8652 191.433 11.4746  c
191.433 11.9104 191.332 12.3463 191.128 12.7822  c
190.815 13.4677 190.307 14.1935 189.605 14.9594  c
188.551 16.1105 187.893 16.8045 187.631 17.0415  c
189.878 17.0415 l
190.335 17.0415 190.656 17.0245 190.840 16.9907  c
191.024 16.9568 191.190 16.8881 191.338 16.7844  c
191.486 16.6807 191.615 16.5336 191.725 16.3432  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.000 335.000 m
194.000 335.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.000 241.000 m
194.000 241.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.000 148.000 m
194.000 148.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.000 55.0000 m
194.000 55.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
