%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, December 8, 2012 10:14:45 PM EST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
11.5000 6.01704 368.980 347.982 rc
0.470588 0 0.0549020 RG
newpath
73.5421 353.000 m
73.5961 350.957 l
73.6500 349.431 l
73.7040 348.156 l
73.9199 344.252 l
74.1358 341.275 l
74.5676 336.567 l
74.9994 332.748 l
75.9436 325.981 l
76.8877 320.437 l
78.6644 311.802 l
80.5216 304.258 l
82.3374 297.801 l
84.2383 291.720 l
86.0691 286.354 l
87.9414 281.257 l
89.7982 276.520 l
91.5043 272.399 l
93.4598 267.910 l
95.2088 264.078 l
97.0736 260.159 l
98.8585 256.551 l
100.840 252.690 l
102.556 249.458 l
104.504 245.904 l
106.279 242.760 l
108.221 239.418 l
109.896 236.608 l
111.805 233.486 l
113.648 230.543 l
115.490 227.669 l
117.325 224.868 l
119.088 222.231 l
120.994 219.438 l
122.810 216.827 l
124.722 214.131 l
126.453 211.733 l
128.365 209.128 l
130.197 206.675 l
132.025 204.268 l
133.934 201.793 l
135.692 199.548 l
137.492 197.281 l
139.480 194.815 l
141.280 192.615 l
143.121 190.394 l
144.993 188.165 l
146.714 186.143 l
148.548 184.012 l
150.369 181.924 l
152.316 179.717 l
154.034 177.792 l
156.017 175.597 l
157.806 173.638 l
159.576 171.720 l
161.480 169.680 l
163.391 167.653 l
165.130 165.828 l
166.977 163.908 l
168.779 162.053 l
170.733 160.062 l
172.423 158.356 l
174.365 156.413 l
176.190 154.604 l
177.998 152.828 l
179.806 151.067 l
181.651 149.285 l
183.607 147.413 l
185.400 145.711 l
187.170 144.045 l
189.063 142.277 l
190.951 140.528 l
192.645 138.970 l
194.653 137.139 l
196.333 135.618 l
198.297 133.853 l
200.172 132.181 l
201.847 130.698 l
203.729 129.043 l
205.625 127.388 l
207.511 125.753 l
209.260 124.247 l
211.071 122.698 l
212.943 121.107 l
214.810 119.532 l
216.730 117.922 l
218.422 116.513 l
220.326 114.937 l
222.238 113.364 l
224.080 111.858 l
225.753 110.499 l
227.742 108.892 l
229.428 107.539 l
231.388 105.974 l
233.124 104.597 l
235.027 103.094 l
236.840 101.672 l
238.732 100.196 l
240.469 98.8490 l
242.343 97.4031 l
244.289 95.9097 l
245.983 94.6166 l
247.813 93.2271 l
249.704 91.7993 l
251.553 90.4099 l
253.342 89.0724 l
255.329 87.5951 l
257.114 86.2745 l
259.020 84.8716 l
260.748 83.6066 l
262.636 82.2302 l
264.413 80.9415 l
266.270 79.6007 l
268.086 78.2961 l
269.987 76.9368 l
271.817 75.6338 l
273.690 74.3076 l
275.546 72.9984 l
277.253 71.8007 l
279.208 70.4342 l
280.957 69.2174 l
282.822 67.9257 l
284.607 66.6948 l
286.589 65.3341 l
288.305 64.1610 l
290.253 62.8351 l
292.028 61.6319 l
293.970 60.3213 l
295.645 59.1951 l
297.553 57.9177 l
299.396 56.6890 l
301.238 55.4660 l
303.074 54.2525 l
304.837 53.0912 l
306.743 51.8408 l
308.559 50.6538 l
310.471 49.4095 l
312.201 48.2874 l
314.114 47.0520 l
315.946 45.8734 l
317.773 44.7020 l
319.682 43.4832 l
321.440 42.3647 l
323.241 41.2234 l
325.229 39.9680 l
327.029 38.8356 l
328.870 37.6817 l
330.742 36.5125 l
332.463 35.4415 l
334.297 34.3037 l
336.117 33.1786 l
338.065 31.9793 l
339.783 30.9247 l
341.766 29.7121 l
343.555 28.6217 l
345.325 27.5463 l
347.229 26.3938 l
349.140 25.2407 l
350.879 24.1950 l
352.726 23.0881 l
354.528 22.0114 l
356.481 20.8481 l
358.172 19.8447 l
360.113 18.6961 l
361.939 17.6198 l
363.746 16.5573 l
365.555 15.4972 l
367.400 14.4194 l
369.356 13.2806 l
371.149 12.2398 l
372.919 11.2154 l
374.811 10.1237 l
376.699 9.03781 l
378.480 8.01705 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
12.5000 355.000 m
378.480 355.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
188 374 14 15 rc
newpath
194.278 380.255 m
194.486 380.475 194.642 380.695 194.748 380.915  c
194.824 381.067 194.949 381.467 195.123 382.115  c
195.681 381.277 l
195.829 381.074 196.009 380.880 196.221 380.696  c
196.432 380.512 196.619 380.386 196.779 380.318  c
196.881 380.276 196.993 380.255 197.116 380.255  c
197.298 380.255 197.443 380.304 197.551 380.401  c
197.658 380.498 197.712 380.617 197.712 380.756  c
197.712 380.917 197.681 381.027 197.617 381.086  c
197.499 381.192 197.363 381.245 197.211 381.245  c
197.122 381.245 197.027 381.226 196.925 381.188  c
196.726 381.120 196.593 381.086 196.525 381.086  c
196.424 381.086 196.303 381.146 196.164 381.264  c
195.901 381.484 195.588 381.910 195.224 382.540  c
195.745 384.724 l
195.825 385.058 195.893 385.258 195.948 385.324  c
196.003 385.389 196.058 385.422 196.113 385.422  c
196.202 385.422 196.305 385.373 196.424 385.276  c
196.657 385.081 196.856 384.827 197.021 384.514  c
197.243 384.628 l
196.976 385.128 196.638 385.543 196.227 385.873  c
195.994 386.059 195.798 386.152 195.637 386.152  c
195.400 386.152 195.211 386.019 195.072 385.752  c
194.983 385.587 194.799 384.876 194.520 383.619  c
193.859 384.766 193.330 385.504 192.933 385.835  c
192.675 386.046 192.425 386.152 192.184 386.152  c
192.014 386.152 191.860 386.091 191.720 385.968  c
191.619 385.875 191.568 385.750 191.568 385.593  c
191.568 385.454 191.614 385.337 191.708 385.244  c
191.801 385.151 191.915 385.105 192.050 385.105  c
192.186 385.105 192.330 385.172 192.482 385.308  c
192.592 385.405 192.677 385.454 192.736 385.454  c
192.787 385.454 192.852 385.420 192.933 385.352  c
193.132 385.191 193.402 384.844 193.745 384.311  c
194.088 383.778 194.312 383.393 194.418 383.156  c
194.156 382.127 194.014 381.584 193.993 381.524  c
193.895 381.249 193.768 381.055 193.612 380.940  c
193.455 380.826 193.225 380.769 192.920 380.769  c
192.823 380.769 192.710 380.773 192.584 380.782  c
192.584 380.553 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
13.0000 355.000 m
13.0000 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 365 7 13 rc
newpath
16.7900 372.438 m
8.21000 372.438 l
8.21000 371.762 l
16.7900 371.762 l
h
f
Q
newpath
20.9604 374.343 m
20.3574 376.000 l
15.2793 376.000 l
15.2793 375.765 l
16.7731 374.402 17.8247 373.289 18.4340 372.426  c
19.0434 371.563 19.3481 370.773 19.3481 370.058  c
19.3481 369.512 19.1809 369.064 18.8466 368.712  c
18.5123 368.361 18.1124 368.186 17.6469 368.186  c
17.2238 368.186 16.8439 368.309 16.5075 368.557  c
16.1711 368.804 15.9225 369.167 15.7617 369.646  c
15.5268 369.646 l
15.6326 368.863 15.9045 368.262 16.3425 367.843  c
16.7805 367.424 17.3274 367.214 17.9834 367.214  c
18.6816 367.214 19.2645 367.439 19.7321 367.887  c
20.1997 368.336 20.4335 368.865 20.4335 369.474  c
20.4335 369.910 20.3320 370.346 20.1289 370.782  c
19.8157 371.467 19.3079 372.193 18.6054 372.959  c
17.5517 374.110 16.8937 374.804 16.6313 375.041  c
18.8784 375.041 l
19.3354 375.041 19.6560 375.024 19.8400 374.990  c
20.0241 374.956 20.1902 374.888 20.3383 374.784  c
20.4864 374.680 20.6155 374.533 20.7255 374.343  c
h
22.4697 371.747 m
22.4697 370.765 22.6178 369.920 22.9140 369.211  c
23.2102 368.502 23.6038 367.974 24.0947 367.627  c
24.4755 367.352 24.8691 367.214 25.2753 367.214  c
25.9355 367.214 26.5279 367.551 27.0527 368.224  c
27.7086 369.057 28.0366 370.187 28.0366 371.613  c
28.0366 372.612 27.8927 373.460 27.6049 374.159  c
27.3172 374.857 26.9501 375.364 26.5036 375.679  c
26.0572 375.994 25.6266 376.152 25.2119 376.152  c
24.3909 376.152 23.7075 375.667 23.1616 374.698  c
22.7003 373.882 22.4697 372.898 22.4697 371.747  c
h
23.7138 371.905 m
23.7138 373.090 23.8598 374.057 24.1518 374.806  c
24.3930 375.437 24.7527 375.752 25.2309 375.752  c
25.4594 375.752 25.6964 375.649 25.9418 375.444  c
26.1873 375.239 26.3735 374.895 26.5004 374.413  c
26.6951 373.685 26.7924 372.659 26.7924 371.334  c
26.7924 370.352 26.6909 369.533 26.4877 368.877  c
26.3354 368.391 26.1386 368.046 25.8974 367.843  c
25.7239 367.703 25.5144 367.633 25.2690 367.633  c
24.9812 367.633 24.7252 367.762 24.5009 368.021  c
24.1962 368.372 23.9889 368.924 23.8789 369.677  c
23.7688 370.431 23.7138 371.173 23.7138 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 355.000 m
73.0000 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
75.4697 371.747 m
75.4697 370.765 75.6178 369.920 75.9140 369.211  c
76.2102 368.502 76.6038 367.974 77.0947 367.627  c
77.4755 367.352 77.8691 367.214 78.2753 367.214  c
78.9355 367.214 79.5279 367.551 80.0527 368.224  c
80.7086 369.057 81.0366 370.187 81.0366 371.613  c
81.0366 372.612 80.8927 373.460 80.6049 374.159  c
80.3172 374.857 79.9501 375.364 79.5036 375.679  c
79.0572 375.994 78.6266 376.152 78.2119 376.152  c
77.3909 376.152 76.7075 375.667 76.1616 374.698  c
75.7003 373.882 75.4697 372.898 75.4697 371.747  c
h
76.7138 371.905 m
76.7138 373.090 76.8598 374.057 77.1518 374.806  c
77.3930 375.437 77.7527 375.752 78.2309 375.752  c
78.4594 375.752 78.6964 375.649 78.9418 375.444  c
79.1873 375.239 79.3735 374.895 79.5004 374.413  c
79.6951 373.685 79.7924 372.659 79.7924 371.334  c
79.7924 370.352 79.6909 369.533 79.4877 368.877  c
79.3354 368.391 79.1386 368.046 78.8974 367.843  c
78.7239 367.703 78.5144 367.633 78.2690 367.633  c
77.9812 367.633 77.7252 367.762 77.5009 368.021  c
77.1962 368.372 76.9889 368.924 76.8789 369.677  c
76.7688 370.431 76.7138 371.173 76.7138 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
134.000 355.000 m
134.000 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
137.960 374.343 m
137.357 376.000 l
132.279 376.000 l
132.279 375.765 l
133.773 374.402 134.824 373.289 135.434 372.426  c
136.043 371.563 136.348 370.773 136.348 370.058  c
136.348 369.512 136.181 369.064 135.846 368.712  c
135.512 368.361 135.112 368.186 134.647 368.186  c
134.223 368.186 133.844 368.309 133.507 368.557  c
133.171 368.804 132.922 369.167 132.761 369.646  c
132.526 369.646 l
132.632 368.863 132.904 368.262 133.342 367.843  c
133.780 367.424 134.327 367.214 134.983 367.214  c
135.681 367.214 136.264 367.439 136.732 367.887  c
137.199 368.336 137.433 368.865 137.433 369.474  c
137.433 369.910 137.332 370.346 137.128 370.782  c
136.815 371.467 136.307 372.193 135.605 372.959  c
134.551 374.110 133.893 374.804 133.631 375.041  c
135.878 375.041 l
136.335 375.041 136.656 375.024 136.840 374.990  c
137.024 374.956 137.190 374.888 137.338 374.784  c
137.486 374.680 137.615 374.533 137.725 374.343  c
h
139.469 371.747 m
139.469 370.765 139.617 369.920 139.914 369.211  c
140.210 368.502 140.603 367.974 141.094 367.627  c
141.475 367.352 141.869 367.214 142.275 367.214  c
142.935 367.214 143.528 367.551 144.052 368.224  c
144.708 369.057 145.036 370.187 145.036 371.613  c
145.036 372.612 144.892 373.460 144.605 374.159  c
144.317 374.857 143.950 375.364 143.503 375.679  c
143.057 375.994 142.626 376.152 142.211 376.152  c
141.391 376.152 140.707 375.667 140.161 374.698  c
139.700 373.882 139.469 372.898 139.469 371.747  c
h
140.713 371.905 m
140.713 373.090 140.859 374.057 141.151 374.806  c
141.393 375.437 141.752 375.752 142.231 375.752  c
142.459 375.752 142.696 375.649 142.941 375.444  c
143.187 375.239 143.373 374.895 143.500 374.413  c
143.695 373.685 143.792 372.659 143.792 371.334  c
143.792 370.352 143.690 369.533 143.487 368.877  c
143.335 368.391 143.138 368.046 142.897 367.843  c
142.724 367.703 142.514 367.633 142.269 367.633  c
141.981 367.633 141.725 367.762 141.501 368.021  c
141.196 368.372 140.988 368.924 140.878 369.677  c
140.768 370.431 140.713 371.173 140.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
195.000 355.000 m
195.000 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
199.049 372.826 m
199.049 373.727 l
197.894 373.727 l
197.894 376.000 l
196.846 376.000 l
196.846 373.727 l
193.203 373.727 l
193.203 372.915 l
197.195 367.214 l
197.894 367.214 l
197.894 372.826 l
h
196.846 372.826 m
196.846 368.554 l
193.825 372.826 l
h
200.469 371.747 m
200.469 370.765 200.617 369.920 200.914 369.211  c
201.210 368.502 201.603 367.974 202.094 367.627  c
202.475 367.352 202.869 367.214 203.275 367.214  c
203.935 367.214 204.528 367.551 205.052 368.224  c
205.708 369.057 206.036 370.187 206.036 371.613  c
206.036 372.612 205.892 373.460 205.605 374.159  c
205.317 374.857 204.950 375.364 204.503 375.679  c
204.057 375.994 203.626 376.152 203.211 376.152  c
202.391 376.152 201.707 375.667 201.161 374.698  c
200.700 373.882 200.469 372.898 200.469 371.747  c
h
201.713 371.905 m
201.713 373.090 201.859 374.057 202.151 374.806  c
202.393 375.437 202.752 375.752 203.231 375.752  c
203.459 375.752 203.696 375.649 203.941 375.444  c
204.187 375.239 204.373 374.895 204.500 374.413  c
204.695 373.685 204.792 372.659 204.792 371.334  c
204.792 370.352 204.690 369.533 204.487 368.877  c
204.335 368.391 204.138 368.046 203.897 367.843  c
203.724 367.703 203.514 367.633 203.269 367.633  c
202.981 367.633 202.725 367.762 202.501 368.021  c
202.196 368.372 201.988 368.924 201.878 369.677  c
201.768 370.431 201.713 371.173 201.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
256.000 355.000 m
256.000 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
259.827 367.214 m
259.827 367.449 l
259.268 367.504 258.812 367.615 258.459 367.783  c
258.105 367.950 257.756 368.205 257.411 368.547  c
257.067 368.890 256.781 369.272 256.554 369.693  c
256.328 370.114 256.139 370.615 255.986 371.194  c
256.596 370.775 257.207 370.566 257.821 370.566  c
258.409 370.566 258.919 370.803 259.351 371.277  c
259.782 371.751 259.998 372.360 259.998 373.105  c
259.998 373.824 259.780 374.480 259.344 375.073  c
258.820 375.792 258.126 376.152 257.262 376.152  c
256.674 376.152 256.175 375.957 255.764 375.568  c
254.960 374.810 254.558 373.829 254.558 372.623  c
254.558 371.852 254.713 371.120 255.022 370.426  c
255.330 369.732 255.772 369.117 256.345 368.579  c
256.918 368.042 257.467 367.680 257.992 367.494  c
258.517 367.307 259.006 367.214 259.459 367.214  c
h
255.878 371.658 m
255.802 372.229 255.764 372.690 255.764 373.042  c
255.764 373.448 255.839 373.889 255.990 374.365  c
256.140 374.841 256.363 375.219 256.659 375.498  c
256.875 375.697 257.137 375.796 257.446 375.796  c
257.814 375.796 258.144 375.623 258.433 375.276  c
258.723 374.929 258.868 374.434 258.868 373.791  c
258.868 373.067 258.724 372.441 258.437 371.912  c
258.149 371.383 257.740 371.118 257.211 371.118  c
257.051 371.118 256.878 371.152 256.694 371.220  c
256.510 371.287 256.238 371.433 255.878 371.658  c
h
261.469 371.747 m
261.469 370.765 261.617 369.920 261.914 369.211  c
262.210 368.502 262.603 367.974 263.094 367.627  c
263.475 367.352 263.869 367.214 264.275 367.214  c
264.935 367.214 265.528 367.551 266.052 368.224  c
266.708 369.057 267.036 370.187 267.036 371.613  c
267.036 372.612 266.892 373.460 266.605 374.159  c
266.317 374.857 265.950 375.364 265.503 375.679  c
265.057 375.994 264.626 376.152 264.211 376.152  c
263.391 376.152 262.707 375.667 262.161 374.698  c
261.700 373.882 261.469 372.898 261.469 371.747  c
h
262.713 371.905 m
262.713 373.090 262.859 374.057 263.151 374.806  c
263.393 375.437 263.752 375.752 264.231 375.752  c
264.459 375.752 264.696 375.649 264.941 375.444  c
265.187 375.239 265.373 374.895 265.500 374.413  c
265.695 373.685 265.792 372.659 265.792 371.334  c
265.792 370.352 265.690 369.533 265.487 368.877  c
265.335 368.391 265.138 368.046 264.897 367.843  c
264.724 367.703 264.514 367.633 264.269 367.633  c
263.981 367.633 263.725 367.762 263.501 368.021  c
263.196 368.372 262.988 368.924 262.878 369.677  c
262.768 370.431 262.713 371.173 262.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
317.000 355.000 m
317.000 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
317.494 371.664 m
316.813 371.106 316.374 370.657 316.177 370.318  c
315.980 369.980 315.882 369.629 315.882 369.265  c
315.882 368.706 316.098 368.225 316.529 367.821  c
316.961 367.416 317.534 367.214 318.250 367.214  c
318.944 367.214 319.502 367.403 319.925 367.779  c
320.349 368.156 320.560 368.585 320.560 369.068  c
320.560 369.390 320.446 369.717 320.217 370.052  c
319.989 370.386 319.513 370.780 318.789 371.232  c
319.534 371.808 320.027 372.261 320.268 372.591  c
320.590 373.022 320.751 373.477 320.751 373.956  c
320.751 374.561 320.520 375.078 320.059 375.508  c
319.597 375.937 318.992 376.152 318.243 376.152  c
317.426 376.152 316.790 375.896 316.333 375.384  c
315.969 374.973 315.787 374.525 315.787 374.038  c
315.787 373.657 315.915 373.280 316.171 372.905  c
316.427 372.531 316.868 372.117 317.494 371.664  c
h
318.491 370.985 m
318.999 370.528 319.320 370.167 319.456 369.903  c
319.591 369.638 319.659 369.339 319.659 369.004  c
319.659 368.560 319.534 368.212 319.284 367.960  c
319.035 367.708 318.694 367.583 318.262 367.583  c
317.831 367.583 317.479 367.707 317.209 367.957  c
316.938 368.207 316.802 368.499 316.802 368.833  c
316.802 369.053 316.858 369.273 316.970 369.493  c
317.083 369.713 317.242 369.923 317.450 370.122  c
h
317.793 371.905 m
317.441 372.202 317.181 372.524 317.012 372.873  c
316.842 373.222 316.758 373.600 316.758 374.006  c
316.758 374.552 316.907 374.989 317.205 375.317  c
317.504 375.645 317.884 375.809 318.345 375.809  c
318.802 375.809 319.168 375.680 319.443 375.422  c
319.718 375.164 319.856 374.851 319.856 374.482  c
319.856 374.178 319.775 373.905 319.614 373.664  c
319.314 373.215 318.707 372.629 317.793 371.905  c
h
322.469 371.747 m
322.469 370.765 322.617 369.920 322.914 369.211  c
323.210 368.502 323.603 367.974 324.094 367.627  c
324.475 367.352 324.869 367.214 325.275 367.214  c
325.935 367.214 326.528 367.551 327.052 368.224  c
327.708 369.057 328.036 370.187 328.036 371.613  c
328.036 372.612 327.892 373.460 327.605 374.159  c
327.317 374.857 326.950 375.364 326.503 375.679  c
326.057 375.994 325.626 376.152 325.211 376.152  c
324.391 376.152 323.707 375.667 323.161 374.698  c
322.700 373.882 322.469 372.898 322.469 371.747  c
h
323.713 371.905 m
323.713 373.090 323.859 374.057 324.151 374.806  c
324.393 375.437 324.752 375.752 325.231 375.752  c
325.459 375.752 325.696 375.649 325.941 375.444  c
326.187 375.239 326.373 374.895 326.500 374.413  c
326.695 373.685 326.792 372.659 326.792 371.334  c
326.792 370.352 326.690 369.533 326.487 368.877  c
326.335 368.391 326.138 368.046 325.897 367.843  c
325.724 367.703 325.514 367.633 325.269 367.633  c
324.981 367.633 324.725 367.762 324.501 368.021  c
324.196 368.372 323.988 368.924 323.878 369.677  c
323.768 370.431 323.713 371.173 323.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
378.000 355.000 m
378.000 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
374.523 368.236 m
376.618 367.214 l
376.827 367.214 l
376.827 374.482 l
376.827 374.965 376.847 375.265 376.887 375.384  c
376.928 375.502 377.011 375.593 377.138 375.657  c
377.265 375.720 377.523 375.756 377.913 375.765  c
377.913 376.000 l
374.675 376.000 l
374.675 375.765 l
375.082 375.756 375.344 375.721 375.462 375.660  c
375.581 375.599 375.663 375.516 375.710 375.412  c
375.757 375.309 375.780 374.999 375.780 374.482  c
375.780 369.836 l
375.780 369.210 375.759 368.808 375.716 368.630  c
375.687 368.495 375.633 368.395 375.554 368.332  c
375.476 368.268 375.382 368.236 375.272 368.236  c
375.115 368.236 374.897 368.302 374.618 368.433  c
h
380.469 371.747 m
380.469 370.765 380.617 369.920 380.914 369.211  c
381.210 368.502 381.603 367.974 382.094 367.627  c
382.475 367.352 382.869 367.214 383.275 367.214  c
383.935 367.214 384.528 367.551 385.052 368.224  c
385.708 369.057 386.036 370.187 386.036 371.613  c
386.036 372.612 385.892 373.460 385.605 374.159  c
385.317 374.857 384.950 375.364 384.503 375.679  c
384.057 375.994 383.626 376.152 383.211 376.152  c
382.391 376.152 381.707 375.667 381.161 374.698  c
380.700 373.882 380.469 372.898 380.469 371.747  c
h
381.713 371.905 m
381.713 373.090 381.859 374.057 382.151 374.806  c
382.393 375.437 382.752 375.752 383.231 375.752  c
383.459 375.752 383.696 375.649 383.941 375.444  c
384.187 375.239 384.373 374.895 384.500 374.413  c
384.695 373.685 384.792 372.659 384.792 371.334  c
384.792 370.352 384.690 369.533 384.487 368.877  c
384.335 368.391 384.138 368.046 383.897 367.843  c
383.724 367.703 383.514 367.633 383.269 367.633  c
382.981 367.633 382.725 367.762 382.501 368.021  c
382.196 368.372 381.988 368.924 381.878 369.677  c
381.768 370.431 381.713 371.173 381.713 371.905  c
h
387.469 371.747 m
387.469 370.765 387.617 369.920 387.914 369.211  c
388.210 368.502 388.603 367.974 389.094 367.627  c
389.475 367.352 389.869 367.214 390.275 367.214  c
390.935 367.214 391.528 367.551 392.052 368.224  c
392.708 369.057 393.036 370.187 393.036 371.613  c
393.036 372.612 392.892 373.460 392.605 374.159  c
392.317 374.857 391.950 375.364 391.503 375.679  c
391.057 375.994 390.626 376.152 390.211 376.152  c
389.391 376.152 388.707 375.667 388.161 374.698  c
387.700 373.882 387.469 372.898 387.469 371.747  c
h
388.713 371.905 m
388.713 373.090 388.859 374.057 389.151 374.806  c
389.393 375.437 389.752 375.752 390.231 375.752  c
390.459 375.752 390.696 375.649 390.941 375.444  c
391.187 375.239 391.373 374.895 391.500 374.413  c
391.695 373.685 391.792 372.659 391.792 371.334  c
391.792 370.352 391.690 369.533 391.487 368.877  c
391.335 368.391 391.138 368.046 390.897 367.843  c
390.724 367.703 390.514 367.633 390.269 367.633  c
389.981 367.633 389.725 367.762 389.501 368.021  c
389.196 368.372 388.988 368.924 388.878 369.677  c
388.768 370.431 388.713 371.173 388.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
43.0000 355.000 m
43.0000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
104.000 355.000 m
104.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
165.000 355.000 m
165.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
226.000 355.000 m
226.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
287.000 355.000 m
287.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
348.000 355.000 m
348.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
73.0000 355.000 m
73.0000 8.01705 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
40 173 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
73.0000 322.000 m
69.0000 322.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
65.5234 324.236 m
67.6181 323.214 l
67.8276 323.214 l
67.8276 330.482 l
67.8276 330.965 67.8477 331.265 67.8879 331.384  c
67.9281 331.502 68.0117 331.593 68.1386 331.657  c
68.2656 331.720 68.5237 331.756 68.9130 331.765  c
68.9130 332.000 l
65.6757 332.000 l
65.6757 331.765 l
66.0820 331.756 66.3444 331.721 66.4628 331.660  c
66.5813 331.599 66.6639 331.516 66.7104 331.412  c
66.7570 331.309 66.7802 330.999 66.7802 330.482  c
66.7802 325.836 l
66.7802 325.210 66.7591 324.808 66.7168 324.630  c
66.6871 324.495 66.6332 324.395 66.5549 324.332  c
66.4766 324.268 66.3824 324.236 66.2724 324.236  c
66.1158 324.236 65.8979 324.302 65.6186 324.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 287.000 m
69.0000 287.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
69.9604 295.343 m
69.3574 297.000 l
64.2793 297.000 l
64.2793 296.765 l
65.7731 295.402 66.8247 294.289 67.4340 293.426  c
68.0434 292.563 68.3481 291.773 68.3481 291.058  c
68.3481 290.512 68.1809 290.064 67.8466 289.712  c
67.5123 289.361 67.1124 289.186 66.6469 289.186  c
66.2238 289.186 65.8439 289.309 65.5075 289.557  c
65.1711 289.804 64.9225 290.167 64.7617 290.646  c
64.5268 290.646 l
64.6326 289.863 64.9045 289.262 65.3425 288.843  c
65.7805 288.424 66.3274 288.214 66.9834 288.214  c
67.6816 288.214 68.2645 288.439 68.7321 288.887  c
69.1997 289.336 69.4335 289.865 69.4335 290.474  c
69.4335 290.910 69.3320 291.346 69.1289 291.782  c
68.8157 292.467 68.3079 293.193 67.6054 293.959  c
66.5517 295.110 65.8937 295.804 65.6313 296.041  c
67.8784 296.041 l
68.3354 296.041 68.6560 296.024 68.8400 295.990  c
69.0241 295.956 69.1902 295.888 69.3383 295.784  c
69.4864 295.680 69.6155 295.533 69.7255 295.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 252.000 m
69.0000 252.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
64.6601 255.030 m
64.9056 254.450 65.2155 254.003 65.5900 253.687  c
65.9646 253.372 66.4311 253.214 66.9897 253.214  c
67.6795 253.214 68.2085 253.439 68.5766 253.887  c
68.8559 254.222 68.9956 254.579 68.9956 254.960  c
68.9956 255.586 68.6020 256.234 67.8149 256.902  c
68.3439 257.110 68.7438 257.406 69.0146 257.791  c
69.2854 258.176 69.4209 258.629 69.4209 259.149  c
69.4209 259.894 69.1839 260.540 68.7099 261.085  c
68.0921 261.796 67.1971 262.152 66.0249 262.152  c
65.4451 262.152 65.0505 262.080 64.8410 261.936  c
64.6315 261.792 64.5268 261.638 64.5268 261.473  c
64.5268 261.350 64.5765 261.242 64.6760 261.149  c
64.7754 261.056 64.8950 261.009 65.0346 261.009  c
65.1404 261.009 65.2483 261.026 65.3584 261.060  c
65.4303 261.081 65.5932 261.158 65.8471 261.292  c
66.1010 261.425 66.2766 261.504 66.3740 261.530  c
66.5306 261.576 66.6977 261.600 66.8754 261.600  c
67.3071 261.600 67.6827 261.432 68.0022 261.098  c
68.3217 260.764 68.4814 260.368 68.4814 259.911  c
68.4814 259.577 68.4073 259.251 68.2592 258.934  c
68.1492 258.697 68.0286 258.517 67.8974 258.394  c
67.7154 258.225 67.4658 258.071 67.1484 257.934  c
66.8310 257.796 66.5073 257.728 66.1772 257.728  c
65.9741 257.728 l
65.9741 257.537 l
66.3084 257.495 66.6438 257.374 66.9802 257.175  c
67.3166 256.976 67.5610 256.737 67.7133 256.458  c
67.8657 256.179 67.9418 255.872 67.9418 255.538  c
67.9418 255.102 67.8054 254.749 67.5324 254.481  c
67.2595 254.212 66.9199 254.078 66.5136 254.078  c
65.8577 254.078 65.3097 254.429 64.8696 255.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 218.000 m
69.0000 218.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
70.0493 223.826 m
70.0493 224.727 l
68.8940 224.727 l
68.8940 227.000 l
67.8466 227.000 l
67.8466 224.727 l
64.2031 224.727 l
64.2031 223.915 l
68.1958 218.214 l
68.8940 218.214 l
68.8940 223.826 l
h
67.8466 223.826 m
67.8466 219.554 l
64.8252 223.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 183.000 m
69.0000 183.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
69.6430 183.392 m
69.1479 184.471 l
66.5581 184.471 l
65.9931 185.627 l
67.1145 185.792 68.0032 186.208 68.6591 186.877  c
69.2220 187.453 69.5034 188.130 69.5034 188.908  c
69.5034 189.361 69.4113 189.780 69.2272 190.165  c
69.0432 190.550 68.8115 190.878 68.5322 191.149  c
68.2529 191.420 67.9418 191.638 67.5991 191.803  c
67.1124 192.036 66.6131 192.152 66.1010 192.152  c
65.5848 192.152 65.2092 192.064 64.9743 191.888  c
64.7395 191.713 64.6220 191.519 64.6220 191.308  c
64.6220 191.189 64.6707 191.084 64.7680 190.993  c
64.8654 190.902 64.9881 190.857 65.1362 190.857  c
65.2462 190.857 65.3425 190.874 65.4250 190.908  c
65.5075 190.942 65.6482 191.028 65.8471 191.168  c
66.1645 191.388 66.4861 191.498 66.8120 191.498  c
67.3071 191.498 67.7419 191.311 68.1164 190.936  c
68.4909 190.562 68.6782 190.106 68.6782 189.568  c
68.6782 189.048 68.5110 188.562 68.1767 188.112  c
67.8424 187.661 67.3811 187.313 66.7929 187.067  c
66.3317 186.877 65.7032 186.767 64.9077 186.737  c
66.5581 183.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 148.000 m
69.0000 148.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
69.8271 148.214 m
69.8271 148.449 l
69.2685 148.504 68.8125 148.615 68.4592 148.783  c
68.1058 148.950 67.7567 149.205 67.4118 149.547  c
67.0669 149.890 66.7813 150.272 66.5549 150.693  c
66.3285 151.114 66.1391 151.615 65.9868 152.194  c
66.5961 151.775 67.2076 151.566 67.8212 151.566  c
68.4095 151.566 68.9194 151.803 69.3510 152.277  c
69.7827 152.751 69.9985 153.360 69.9985 154.105  c
69.9985 154.824 69.7806 155.480 69.3447 156.073  c
68.8199 156.792 68.1259 157.152 67.2627 157.152  c
66.6744 157.152 66.1751 156.957 65.7646 156.568  c
64.9606 155.810 64.5585 154.829 64.5585 153.623  c
64.5585 152.852 64.7130 152.120 65.0219 151.426  c
65.3308 150.732 65.7720 150.117 66.3454 149.579  c
66.9188 149.042 67.4679 148.680 67.9926 148.494  c
68.5174 148.307 69.0061 148.214 69.4589 148.214  c
h
65.8789 152.658 m
65.8027 153.229 65.7646 153.690 65.7646 154.042  c
65.7646 154.448 65.8397 154.889 65.9899 155.365  c
66.1402 155.841 66.3634 156.219 66.6596 156.498  c
66.8754 156.697 67.1378 156.796 67.4467 156.796  c
67.8149 156.796 68.1439 156.623 68.4338 156.276  c
68.7237 155.929 68.8686 155.434 68.8686 154.791  c
68.8686 154.067 68.7247 153.441 68.4370 152.912  c
68.1492 152.383 67.7408 152.118 67.2119 152.118  c
67.0511 152.118 66.8786 152.152 66.6945 152.220  c
66.5105 152.287 66.2386 152.433 65.8789 152.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 113.000 m
69.0000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
65.3076 113.392 m
69.9223 113.392 l
69.9223 113.633 l
67.0532 122.177 l
66.3422 122.177 l
68.9130 114.427 l
66.5454 114.427 l
66.0672 114.427 65.7265 114.484 65.5234 114.598  c
65.1679 114.793 64.8823 115.093 64.6665 115.500  c
64.4824 115.430 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 78.0000 m
69.0000 78.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
66.4946 82.6645 m
65.8133 82.1059 65.3742 81.6573 65.1774 81.3188  c
64.9807 80.9803 64.8823 80.6290 64.8823 80.2651  c
64.8823 79.7065 65.0981 79.2251 65.5297 78.8210  c
65.9614 78.4169 66.5348 78.2148 67.2500 78.2148  c
67.9440 78.2148 68.5026 78.4031 68.9257 78.7797  c
69.3489 79.1564 69.5605 79.5859 69.5605 80.0683  c
69.5605 80.3899 69.4462 80.7179 69.2177 81.0522  c
68.9892 81.3865 68.5131 81.7801 67.7895 82.2329  c
68.5343 82.8084 69.0273 83.2612 69.2685 83.5913  c
69.5901 84.0229 69.7509 84.4778 69.7509 84.9560  c
69.7509 85.5612 69.5203 86.0785 69.0590 86.5080  c
68.5978 86.9375 67.9926 87.1523 67.2436 87.1523  c
66.4269 87.1523 65.7900 86.8963 65.3330 86.3842  c
64.9690 85.9738 64.7871 85.5252 64.7871 85.0385  c
64.7871 84.6577 64.9151 84.2800 65.1711 83.9055  c
65.4271 83.5310 65.8683 83.1173 66.4946 82.6645  c
h
67.4912 81.9853 m
67.9990 81.5283 68.3206 81.1675 68.4560 80.9030  c
68.5914 80.6385 68.6591 80.3391 68.6591 80.0048  c
68.6591 79.5605 68.5343 79.2124 68.2846 78.9606  c
68.0349 78.7089 67.6943 78.5830 67.2627 78.5830  c
66.8310 78.5830 66.4798 78.7078 66.2089 78.9575  c
65.9381 79.2071 65.8027 79.4991 65.8027 79.8335  c
65.8027 80.0535 65.8588 80.2736 65.9709 80.4936  c
66.0830 80.7137 66.2428 80.9231 66.4502 81.1220  c
h
66.7929 82.9057 m
66.4417 83.2019 66.1814 83.5246 66.0122 83.8737  c
65.8429 84.2229 65.7583 84.6005 65.7583 85.0068  c
65.7583 85.5527 65.9074 85.9896 66.2058 86.3176  c
66.5041 86.6455 66.8839 86.8095 67.3452 86.8095  c
67.8022 86.8095 68.1682 86.6805 68.4433 86.4223  c
68.7184 86.1642 68.8559 85.8510 68.8559 85.4829  c
68.8559 85.1782 68.7755 84.9052 68.6147 84.6640  c
68.3142 84.2154 67.7070 83.6293 66.7929 82.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 43.0000 m
69.0000 43.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
64.6855 52.1777 m
64.6855 51.9428 l
65.2356 51.9344 65.7477 51.8064 66.2216 51.5588  c
66.6956 51.3112 67.1537 50.8785 67.5959 50.2607  c
68.0381 49.6429 68.3460 48.9637 68.5195 48.2231  c
67.8551 48.6505 67.2542 48.8642 66.7168 48.8642  c
66.1116 48.8642 65.5932 48.6304 65.1616 48.1628  c
64.7299 47.6952 64.5141 47.0742 64.5141 46.2998  c
64.5141 45.5465 64.7299 44.8758 65.1616 44.2876  c
65.6821 43.5724 66.3613 43.2148 67.1992 43.2148  c
67.9059 43.2148 68.5110 43.5068 69.0146 44.0908  c
69.6324 44.8144 69.9414 45.7073 69.9414 46.7695  c
69.9414 47.7259 69.7065 48.6177 69.2368 49.4450  c
68.7670 50.2723 68.1132 50.9589 67.2753 51.5048  c
66.5940 51.9534 65.8514 52.1777 65.0473 52.1777  c
h
68.6210 47.7534 m
68.6972 47.2032 68.7353 46.7631 68.7353 46.4331  c
68.7353 46.0226 68.6655 45.5793 68.5258 45.1032  c
68.3862 44.6272 68.1884 44.2622 67.9323 44.0083  c
67.6763 43.7543 67.3854 43.6274 67.0595 43.6274  c
66.6829 43.6274 66.3528 43.7967 66.0693 44.1352  c
65.7858 44.4738 65.6440 44.9773 65.6440 45.6460  c
65.6440 46.5389 65.8323 47.2371 66.2089 47.7407  c
66.4840 48.1046 66.8225 48.2866 67.2246 48.2866  c
67.4192 48.2866 67.6499 48.2400 67.9165 48.1469  c
68.1831 48.0538 68.4179 47.9226 68.6210 47.7534  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 8.00000 m
69.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
58.5234 10.2368 m
60.6181 9.21484 l
60.8276 9.21484 l
60.8276 16.4829 l
60.8276 16.9653 60.8477 17.2657 60.8879 17.3842  c
60.9281 17.5027 61.0117 17.5937 61.1386 17.6572  c
61.2656 17.7207 61.5237 17.7566 61.9130 17.7651  c
61.9130 18.0000 l
58.6757 18.0000 l
58.6757 17.7651 l
59.0820 17.7566 59.3444 17.7217 59.4628 17.6604  c
59.5813 17.5990 59.6639 17.5165 59.7104 17.4128  c
59.7570 17.3091 59.7802 16.9991 59.7802 16.4829  c
59.7802 11.8364 l
59.7802 11.2101 59.7591 10.8081 59.7168 10.6303  c
59.6871 10.4949 59.6332 10.3955 59.5549 10.3320  c
59.4766 10.2685 59.3824 10.2368 59.2724 10.2368  c
59.1158 10.2368 58.8979 10.3024 58.6186 10.4335  c
h
64.4697 13.7470 m
64.4697 12.7653 64.6178 11.9200 64.9140 11.2111  c
65.2102 10.5023 65.6038 9.97444 66.0947 9.62744  c
66.4755 9.35237 66.8691 9.21484 67.2753 9.21484  c
67.9355 9.21484 68.5279 9.55127 69.0527 10.2241  c
69.7086 11.0577 70.0366 12.1876 70.0366 13.6137  c
70.0366 14.6124 69.8927 15.4609 69.6049 16.1591  c
69.3172 16.8574 68.9501 17.3641 68.5036 17.6794  c
68.0572 17.9947 67.6266 18.1523 67.2119 18.1523  c
66.3909 18.1523 65.7075 17.6678 65.1616 16.6987  c
64.7003 15.8820 64.4697 14.8981 64.4697 13.7470  c
h
65.7138 13.9057 m
65.7138 15.0906 65.8598 16.0576 66.1518 16.8066  c
66.3930 17.4371 66.7527 17.7524 67.2309 17.7524  c
67.4594 17.7524 67.6964 17.6498 67.9418 17.4445  c
68.1873 17.2393 68.3735 16.8955 68.5004 16.4130  c
68.6951 15.6852 68.7924 14.6590 68.7924 13.3344  c
68.7924 12.3527 68.6909 11.5338 68.4877 10.8779  c
68.3354 10.3912 68.1386 10.0463 67.8974 9.84326  c
67.7239 9.70361 67.5144 9.63378 67.2690 9.63378  c
66.9812 9.63378 66.7252 9.76285 66.5009 10.0210  c
66.1962 10.3722 65.9889 10.9244 65.8789 11.6777  c
65.7688 12.4309 65.7138 13.1736 65.7138 13.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 340.000 m
71.0000 340.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 305.000 m
71.0000 305.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 270.000 m
71.0000 270.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 235.000 m
71.0000 235.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 200.000 m
71.0000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 165.000 m
71.0000 165.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 130.000 m
71.0000 130.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 95.0000 m
71.0000 95.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 60.0000 m
71.0000 60.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
73.0000 25.0000 m
71.0000 25.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
